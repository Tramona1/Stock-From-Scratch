"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/watchlist/route";
exports.ids = ["app/api/watchlist/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwatchlist%2Froute&page=%2Fapi%2Fwatchlist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwatchlist%2Froute.ts&appDir=%2FUsers%2Fblakesingleton%2FDesktop%2FStock%20From%20Scratch%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fblakesingleton%2FDesktop%2FStock%20From%20Scratch&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwatchlist%2Froute&page=%2Fapi%2Fwatchlist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwatchlist%2Froute.ts&appDir=%2FUsers%2Fblakesingleton%2FDesktop%2FStock%20From%20Scratch%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fblakesingleton%2FDesktop%2FStock%20From%20Scratch&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_blakesingleton_Desktop_Stock_From_Scratch_src_app_api_watchlist_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/watchlist/route.ts */ \"(rsc)/./src/app/api/watchlist/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/watchlist/route\",\n        pathname: \"/api/watchlist\",\n        filename: \"route\",\n        bundlePath: \"app/api/watchlist/route\"\n    },\n    resolvedPagePath: \"/Users/blakesingleton/Desktop/Stock From Scratch/src/app/api/watchlist/route.ts\",\n    nextConfigOutput,\n    userland: _Users_blakesingleton_Desktop_Stock_From_Scratch_src_app_api_watchlist_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/watchlist/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ3YXRjaGxpc3QlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRndhdGNobGlzdCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRndhdGNobGlzdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmJsYWtlc2luZ2xldG9uJTJGRGVza3RvcCUyRlN0b2NrJTIwRnJvbSUyMFNjcmF0Y2glMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGYmxha2VzaW5nbGV0b24lMkZEZXNrdG9wJTJGU3RvY2slMjBGcm9tJTIwU2NyYXRjaCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDK0I7QUFDNUc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdG9jay1hbmFseXRpY3MtZGFzaGJvYXJkLz8xYjI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9ibGFrZXNpbmdsZXRvbi9EZXNrdG9wL1N0b2NrIEZyb20gU2NyYXRjaC9zcmMvYXBwL2FwaS93YXRjaGxpc3Qvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3dhdGNobGlzdC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3dhdGNobGlzdFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvd2F0Y2hsaXN0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2JsYWtlc2luZ2xldG9uL0Rlc2t0b3AvU3RvY2sgRnJvbSBTY3JhdGNoL3NyYy9hcHAvYXBpL3dhdGNobGlzdC9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvd2F0Y2hsaXN0L3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwatchlist%2Froute&page=%2Fapi%2Fwatchlist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwatchlist%2Froute.ts&appDir=%2FUsers%2Fblakesingleton%2FDesktop%2FStock%20From%20Scratch%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fblakesingleton%2FDesktop%2FStock%20From%20Scratch&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/watchlist/route.ts":
/*!****************************************!*\
  !*** ./src/app/api/watchlist/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\");\n/* harmony import */ var _services_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/services/database */ \"(rsc)/./src/services/database.ts\");\n/* harmony import */ var _services_users__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/services/users */ \"(rsc)/./src/services/users.ts\");\n\n\n\n\n// Force dynamic to avoid caching issues\nconst dynamic = \"force-dynamic\";\n// GET: Get user's watchlist\nasync function GET(req) {\n    try {\n        const { userId } = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.getAuth)(req);\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        console.log(`API: Fetching watchlist for user: ${userId}`);\n        // Ensure user exists in Supabase\n        await (0,_services_users__WEBPACK_IMPORTED_MODULE_2__.createUserIfNotExists)(userId);\n        try {\n            // Get watchlist from Supabase\n            const watchlistItems = await (0,_services_database__WEBPACK_IMPORTED_MODULE_1__.getUserWatchlist)(userId);\n            // Temporarily generate mock price data for each ticker\n            // Until we set up the stock_info table or use a real market data API\n            const transformedWatchlist = watchlistItems.map((item)=>({\n                    id: item.id,\n                    symbol: item.ticker,\n                    price: generateMockPrice(item.ticker),\n                    change: generateMockChange(),\n                    volume: generateMockVolume(),\n                    watching: true\n                }));\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                watchlist: transformedWatchlist\n            });\n        } catch (fetchError) {\n            console.error(\"Error fetching watchlist items:\", fetchError);\n            // Return empty watchlist instead of error\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                watchlist: []\n            });\n        }\n    } catch (error) {\n        console.error(\"Error in watchlist API:\", error);\n        // Return empty watchlist rather than error\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            watchlist: []\n        });\n    }\n}\n// POST: Add ticker to watchlist\nasync function POST(req) {\n    try {\n        const { userId } = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.getAuth)(req);\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const data = await req.json();\n        const { ticker } = data;\n        if (!ticker) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Ticker is required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`API: Adding ticker ${ticker} for user: ${userId}`);\n        // Ensure user exists in Supabase\n        await (0,_services_users__WEBPACK_IMPORTED_MODULE_2__.createUserIfNotExists)(userId);\n        try {\n            // Add ticker to watchlist\n            console.log(`Calling addToWatchlist with userId: ${userId}, ticker: ${ticker.toUpperCase()}`);\n            await (0,_services_database__WEBPACK_IMPORTED_MODULE_1__.addToWatchlist)(userId, ticker.toUpperCase());\n            console.log(`Successfully added ticker ${ticker.toUpperCase()} to watchlist`);\n            // Get updated watchlist\n            const watchlistItems = await (0,_services_database__WEBPACK_IMPORTED_MODULE_1__.getUserWatchlist)(userId);\n            console.log(`Retrieved updated watchlist with ${watchlistItems.length} items`);\n            // Return mock data for now\n            const transformedWatchlist = watchlistItems.map((item)=>({\n                    id: item.id,\n                    symbol: item.ticker,\n                    price: generateMockPrice(item.ticker),\n                    change: generateMockChange(),\n                    volume: generateMockVolume(),\n                    watching: true\n                }));\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: `Added ${ticker.toUpperCase()} to watchlist`,\n                watchlist: transformedWatchlist\n            });\n        } catch (addError) {\n            console.error(\"Error adding ticker to watchlist:\", addError);\n            // Return 200 with current watchlist instead of throwing an error\n            // This prevents navigation on error but still shows the error in logs\n            const currentWatchlist = await (0,_services_database__WEBPACK_IMPORTED_MODULE_1__.getUserWatchlist)(userId);\n            const transformedWatchlist = currentWatchlist.map((item)=>({\n                    id: item.id,\n                    symbol: item.ticker,\n                    price: generateMockPrice(item.ticker),\n                    change: generateMockChange(),\n                    volume: generateMockVolume(),\n                    watching: true\n                }));\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: `Failed to add ${ticker.toUpperCase()} to watchlist`,\n                error: addError.message,\n                watchlist: transformedWatchlist\n            }, {\n                status: 200\n            }); // Still return 200 to prevent page navigation\n        }\n    } catch (error) {\n        console.error(\"Error in POST /api/watchlist:\", error);\n        // Return 200 with error message to prevent page navigation\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Server error\",\n            message: error?.message || \"Unknown error\",\n            watchlist: []\n        }, {\n            status: 200\n        });\n    }\n}\n// DELETE: Remove ticker from watchlist\nasync function DELETE(req) {\n    try {\n        const { userId } = (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.getAuth)(req);\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const { searchParams } = new URL(req.url);\n        const ticker = searchParams.get(\"ticker\");\n        if (!ticker) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Ticker is required\"\n            }, {\n                status: 400\n            });\n        }\n        try {\n            // Remove ticker from watchlist\n            await (0,_services_database__WEBPACK_IMPORTED_MODULE_1__.removeFromWatchlist)(userId, ticker.toUpperCase());\n            // Get updated watchlist\n            const watchlistItems = await (0,_services_database__WEBPACK_IMPORTED_MODULE_1__.getUserWatchlist)(userId);\n            // Return mock data for now\n            const transformedWatchlist = watchlistItems.map((item)=>({\n                    id: item.id,\n                    symbol: item.ticker,\n                    price: generateMockPrice(item.ticker),\n                    change: generateMockChange(),\n                    volume: generateMockVolume(),\n                    watching: true\n                }));\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: `Removed ${ticker.toUpperCase()} from watchlist`,\n                watchlist: transformedWatchlist\n            });\n        } catch (removeError) {\n            console.error(\"Error removing ticker from watchlist:\", removeError);\n            throw removeError;\n        }\n    } catch (error) {\n        console.error(\"Error removing from watchlist:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Server error\",\n            message: error?.message || \"Unknown error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Helper functions to generate mock data\nfunction generateMockPrice(ticker) {\n    // Generate a pseudo-random but consistent price based on ticker string\n    const sum = ticker.split(\"\").reduce((acc, char)=>acc + char.charCodeAt(0), 0);\n    return Math.floor(50 + sum % 450) + Math.random() * 10;\n}\nfunction generateMockChange() {\n    // Generate a random percent change between -5% and +5%\n    return (Math.random() * 10 - 5).toFixed(2);\n}\nfunction generateMockVolume() {\n    // Generate a random volume string\n    const volume = Math.floor(Math.random() * 20) + 1;\n    const decimal = Math.floor(Math.random() * 9);\n    return `${volume}.${decimal}M`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/watchlist/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Environment variables for client-side Supabase access\nconst supabaseUrl = \"https://xtvfaileukqrdnnfghui.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh0dmZhaWxldWtxcmRubmZnaHVpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA1NjIwMjUsImV4cCI6MjA1NjEzODAyNX0.cePSYKeWbyeSicflzbMyF5a344IkCMTsSKwv-7J0_AI\";\n// Validate environment variables\nif (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\"Missing Supabase environment variables for client-side access\");\n}\n// Create and export the Supabase client\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl || \"\", supabaseAnonKey || \"\", {\n    auth: {\n        persistSession: true\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBR3JELHdEQUF3RDtBQUN4RCxNQUFNQyxjQUFjQywwQ0FBb0M7QUFDeEQsTUFBTUcsa0JBQWtCSCxrTkFBeUM7QUFFakUsaUNBQWlDO0FBQ2pDLElBQUksQ0FBQ0QsZUFBZSxDQUFDSSxpQkFBaUI7SUFDcENFLFFBQVFDLEtBQUssQ0FBQztBQUNoQjtBQUVBLHdDQUF3QztBQUNqQyxNQUFNQyxXQUFXVCxtRUFBWUEsQ0FDbENDLGVBQWUsSUFDZkksbUJBQW1CLElBQ25CO0lBQ0VLLE1BQU07UUFDSkMsZ0JBQWdCO0lBQ2xCO0FBQ0YsR0FDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0b2NrLWFuYWx5dGljcy1kYXNoYm9hcmQvLi9zcmMvbGliL3N1cGFiYXNlLnRzPzA2ZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcbmltcG9ydCB0eXBlIHsgRGF0YWJhc2UgfSBmcm9tICcuLi90eXBlcy9zdXBhYmFzZSc7XG5cbi8vIEVudmlyb25tZW50IHZhcmlhYmxlcyBmb3IgY2xpZW50LXNpZGUgU3VwYWJhc2UgYWNjZXNzXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCBhcyBzdHJpbmc7XG5jb25zdCBzdXBhYmFzZUFub25LZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSBhcyBzdHJpbmc7XG5cbi8vIFZhbGlkYXRlIGVudmlyb25tZW50IHZhcmlhYmxlc1xuaWYgKCFzdXBhYmFzZVVybCB8fCAhc3VwYWJhc2VBbm9uS2V5KSB7XG4gIGNvbnNvbGUuZXJyb3IoJ01pc3NpbmcgU3VwYWJhc2UgZW52aXJvbm1lbnQgdmFyaWFibGVzIGZvciBjbGllbnQtc2lkZSBhY2Nlc3MnKTtcbn1cblxuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIFN1cGFiYXNlIGNsaWVudFxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50PERhdGFiYXNlPihcbiAgc3VwYWJhc2VVcmwgfHwgJycsXG4gIHN1cGFiYXNlQW5vbktleSB8fCAnJyxcbiAge1xuICAgIGF1dGg6IHtcbiAgICAgIHBlcnNpc3RTZXNzaW9uOiB0cnVlLFxuICAgIH0sXG4gIH1cbik7ICJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsImNvbnNvbGUiLCJlcnJvciIsInN1cGFiYXNlIiwiYXV0aCIsInBlcnNpc3RTZXNzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase/server.ts":
/*!************************************!*\
  !*** ./src/lib/supabase/server.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   createClientWithAuth: () => (/* binding */ createClientWithAuth)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Cache the Supabase client to avoid creating a new client for every call\nlet supabaseClient = null;\n/**\n * Creates a Supabase client with the service role key for server operations\n * This gives full access to the database, so it should only be used in server contexts\n */ function createClient() {\n    // Return the cached client if it exists\n    if (supabaseClient) {\n        return supabaseClient;\n    }\n    // Check environment variables\n    const supabaseUrl = \"https://xtvfaileukqrdnnfghui.supabase.co\";\n    const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n    // If we're in development and missing the service role key but have the anon key,\n    // use that as a fallback with a warning\n    const isDev = \"development\" === \"development\";\n    if (!supabaseUrl) {\n        console.error(\"Missing Supabase URL\");\n        if (isDev) {\n            return createMockClient();\n        }\n        throw new Error(\"Missing Supabase URL\");\n    }\n    if (!supabaseKey) {\n        console.warn(\"Missing SUPABASE_SERVICE_ROLE_KEY - using fallback in development mode\");\n        if (isDev) {\n            // In development, use the anon key if available as fallback\n            const fallbackKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh0dmZhaWxldWtxcmRubmZnaHVpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA1NjIwMjUsImV4cCI6MjA1NjEzODAyNX0.cePSYKeWbyeSicflzbMyF5a344IkCMTsSKwv-7J0_AI\";\n            if (fallbackKey) {\n                console.info(\"Using NEXT_PUBLIC_SUPABASE_ANON_KEY as fallback for development\");\n                supabaseClient = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, fallbackKey, {\n                    auth: {\n                        persistSession: false,\n                        autoRefreshToken: false\n                    }\n                });\n                return supabaseClient;\n            }\n            return createMockClient();\n        }\n        throw new Error(\"Missing SUPABASE_SERVICE_ROLE_KEY environment variable\");\n    }\n    // Create a new client with the service role key\n    supabaseClient = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey, {\n        auth: {\n            persistSession: false,\n            autoRefreshToken: false\n        }\n    });\n    return supabaseClient;\n}\n/**\n * Creates a mock Supabase client for development when keys aren't available\n * This allows the application to run without a real Supabase connection\n */ function createMockClient() {\n    console.info(\"Creating mock Supabase client for development\");\n    // Return a mocked client that doesn't throw errors\n    return {\n        from: ()=>({\n                select: ()=>({\n                        eq: ()=>({\n                                single: async ()=>({\n                                        data: null,\n                                        error: null\n                                    }),\n                                execute: async ()=>({\n                                        data: [],\n                                        error: null\n                                    })\n                            }),\n                        execute: async ()=>({\n                                data: [],\n                                error: null\n                            })\n                    }),\n                insert: async ()=>({\n                        data: null,\n                        error: null\n                    }),\n                update: async ()=>({\n                        data: null,\n                        error: null\n                    }),\n                delete: async ()=>({\n                        data: null,\n                        error: null\n                    })\n            })\n    };\n}\n/**\n * Helper function to create a client for a specific user with their auth token\n * This is useful for operations that should be performed with the user's permissions\n */ function createClientWithAuth(supabaseAccessToken) {\n    const supabaseUrl = \"https://xtvfaileukqrdnnfghui.supabase.co\";\n    const supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh0dmZhaWxldWtxcmRubmZnaHVpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA1NjIwMjUsImV4cCI6MjA1NjEzODAyNX0.cePSYKeWbyeSicflzbMyF5a344IkCMTsSKwv-7J0_AI\";\n    if (!supabaseUrl || !supabaseAnonKey) {\n        console.error(\"Missing Supabase environment variables\");\n        if (true) {\n            return createMockClient();\n        }\n        throw new Error(\"Missing Supabase environment variables\");\n    }\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey, {\n        global: {\n            headers: {\n                Authorization: `Bearer ${supabaseAccessToken}`\n            }\n        },\n        auth: {\n            persistSession: false\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase/server.ts\n");

/***/ }),

/***/ "(rsc)/./src/services/database.ts":
/*!**********************************!*\
  !*** ./src/services/database.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToWatchlist: () => (/* binding */ addToWatchlist),\n/* harmony export */   getDarkPoolActivity: () => (/* binding */ getDarkPoolActivity),\n/* harmony export */   getHedgeFundHoldings: () => (/* binding */ getHedgeFundHoldings),\n/* harmony export */   getInsiderTrades: () => (/* binding */ getInsiderTrades),\n/* harmony export */   getMarketIndicators: () => (/* binding */ getMarketIndicators),\n/* harmony export */   getOptionsFlowData: () => (/* binding */ getOptionsFlowData),\n/* harmony export */   getStockById: () => (/* binding */ getStockById),\n/* harmony export */   getStocks: () => (/* binding */ getStocks),\n/* harmony export */   getUserWatchlist: () => (/* binding */ getUserWatchlist),\n/* harmony export */   removeFromWatchlist: () => (/* binding */ removeFromWatchlist)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _lib_supabase_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase/server */ \"(rsc)/./src/lib/supabase/server.ts\");\n\n\n// ======== Stock Info ========\nasync function getStocks() {\n    const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"stock_info\").select(\"*\");\n    if (error) throw error;\n    return data || [];\n}\nasync function getStockById(ticker) {\n    const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"stock_info\").select(\"*\").eq(\"ticker\", ticker).single();\n    if (error) throw error;\n    return data;\n}\n// ======== Insider Trading ========\nasync function getInsiderTrades(limit = 10) {\n    const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"insider_trades\").select(\"*\").order(\"transaction_date\", {\n        ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data || [];\n}\n// ======== Hedge Fund Holdings ========\nasync function getHedgeFundHoldings(limit = 10) {\n    const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"hedge_fund_holdings\").select(\"*\").order(\"filing_date\", {\n        ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data || [];\n}\n// ======== Options Flow ========\nasync function getOptionsFlowData(limit = 10) {\n    const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"option_flow_data\").select(\"*\").order(\"date\", {\n        ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data || [];\n}\n// ======== Dark Pool Data ========\nasync function getDarkPoolActivity(limit = 10) {\n    const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"dark_pool_data\").select(\"*\").order(\"data_date\", {\n        ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return data || [];\n}\n// ======== Market Indicators ========\nasync function getMarketIndicators() {\n    const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"market_indicators\").select(\"*\");\n    if (error) throw error;\n    return data || [];\n}\n// ======== User Watchlist ========\nasync function getUserWatchlist(userId) {\n    // For reading watchlist items, we can use the server client to bypass RLS\n    const supabaseServer = (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_1__.createClient)();\n    const { data, error } = await supabaseServer.from(\"watchlists\").select(\"*\").eq(\"user_id\", userId);\n    if (error) throw error;\n    return data || [];\n}\nasync function addToWatchlist(userId, ticker) {\n    // Use server client to bypass RLS for inserting\n    const supabaseServer = (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_1__.createClient)();\n    const { error } = await supabaseServer.from(\"watchlists\").insert({\n        user_id: userId,\n        ticker\n    });\n    if (error) throw error;\n}\nasync function removeFromWatchlist(userId, ticker) {\n    // Use server client to bypass RLS for deleting\n    const supabaseServer = (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_1__.createClient)();\n    const { error } = await supabaseServer.from(\"watchlists\").delete().eq(\"user_id\", userId).eq(\"ticker\", ticker);\n    if (error) throw error;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/services/database.ts\n");

/***/ }),

/***/ "(rsc)/./src/services/users.ts":
/*!*******************************!*\
  !*** ./src/services/users.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUserIfNotExists: () => (/* binding */ createUserIfNotExists),\n/* harmony export */   getUserById: () => (/* binding */ getUserById),\n/* harmony export */   getUserSubscription: () => (/* binding */ getUserSubscription),\n/* harmony export */   updateUser: () => (/* binding */ updateUser),\n/* harmony export */   updateUserSubscription: () => (/* binding */ updateUserSubscription)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase/server */ \"(rsc)/./src/lib/supabase/server.ts\");\n\n/**\n * Get a user from Supabase by their ID \n * Server-side function using the service role\n */ async function getUserById(userId) {\n    try {\n        const supabase = (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n        const { data, error } = await supabase.from(\"users\").select(\"*\").eq(\"id\", userId).single();\n        if (error) {\n            console.error(\"Error fetching user:\", error);\n            return null;\n        }\n        return data;\n    } catch (error) {\n        console.error(\"Unexpected error fetching user:\", error);\n        return null;\n    }\n}\n/**\n * Update a user's profile in Supabase\n * Server-side function using the service role\n */ async function updateUser(userId, userData) {\n    try {\n        const supabase = (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n        const { error } = await supabase.from(\"users\").update({\n            ...userData,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", userId);\n        if (error) {\n            console.error(\"Error updating user:\", error);\n            return false;\n        }\n        return true;\n    } catch (error) {\n        console.error(\"Unexpected error updating user:\", error);\n        return false;\n    }\n}\n/**\n * Get a user's subscription status\n * Server-side function using the service role\n */ async function getUserSubscription(userId) {\n    try {\n        console.log(`Fetching subscription for user: ${userId}`);\n        const supabase = (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n        const { data, error } = await supabase.from(\"users\").select(\"subscription_status, subscription_id, plan_type, is_annual, current_period_end, cancel_at_period_end\").eq(\"id\", userId).single();\n        if (error) {\n            console.error(\"Error fetching user subscription:\", error);\n            // Don't use mock data - log the error and return null\n            return null;\n        }\n        // If no data returned, log and return null\n        if (!data) {\n            console.log(`No subscription data found for user: ${userId}`);\n            return null;\n        }\n        // Validate currentPeriodEnd - set to null if invalid (year < 2000)\n        let currentPeriodEnd = data.current_period_end;\n        if (currentPeriodEnd) {\n            const date = new Date(currentPeriodEnd);\n            if (isNaN(date.getTime()) || date.getFullYear() < 2000) {\n                currentPeriodEnd = null;\n            }\n        }\n        return {\n            status: data.subscription_status,\n            plan: data.plan_type,\n            isAnnual: data.is_annual,\n            currentPeriodEnd: currentPeriodEnd,\n            cancelAtPeriodEnd: data.cancel_at_period_end,\n            subscriptionId: data.subscription_id\n        };\n    } catch (error) {\n        console.error(\"Unexpected error fetching user subscription:\", error);\n        return null;\n    }\n}\n/**\n * Update a user's subscription status\n * Server-side function using the service role\n */ async function updateUserSubscription(userId, subscriptionData) {\n    try {\n        console.log(`Updating subscription for user ${userId} with data:`, JSON.stringify(subscriptionData));\n        const supabase = (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n        // Create an update object including only the fields that are provided\n        const updateData = {\n            updated_at: new Date().toISOString()\n        };\n        if (subscriptionData.subscriptionId !== undefined) {\n            updateData.subscription_id = subscriptionData.subscriptionId;\n        }\n        if (subscriptionData.status !== undefined) {\n            updateData.subscription_status = subscriptionData.status;\n        }\n        if (subscriptionData.plan !== undefined) {\n            updateData.plan_type = subscriptionData.plan;\n        }\n        if (subscriptionData.isAnnual !== undefined) {\n            updateData.is_annual = subscriptionData.isAnnual;\n        }\n        if (subscriptionData.currentPeriodEnd !== undefined) {\n            updateData.current_period_end = subscriptionData.currentPeriodEnd;\n        }\n        if (subscriptionData.cancelAtPeriodEnd !== undefined) {\n            updateData.cancel_at_period_end = subscriptionData.cancelAtPeriodEnd;\n        }\n        console.log(`Updating with data:`, JSON.stringify(updateData));\n        const { error } = await supabase.from(\"users\").update(updateData).eq(\"id\", userId);\n        if (error) {\n            console.error(\"Error updating user subscription:\", error);\n            return false;\n        }\n        console.log(`Subscription updated successfully for user ${userId}`);\n        return true;\n    } catch (error) {\n        console.error(\"Unexpected error updating user subscription:\", error);\n        return false;\n    }\n}\n/**\n * Create a new user in Supabase if they don't exist yet\n * This is a fallback mechanism when the Clerk webhook fails to create the user\n */ async function createUserIfNotExists(userId, email, firstName, lastName) {\n    try {\n        console.log(`Checking if user exists and creating if needed: ${userId}`);\n        const supabase = (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n        // First check if the user already exists\n        const { data: existingUser, error: checkError } = await supabase.from(\"users\").select(\"id\").eq(\"id\", userId).single();\n        // If user already exists, nothing to do\n        if (existingUser) {\n            console.log(`User ${userId} already exists in Supabase`);\n            return true;\n        }\n        if (checkError && checkError.code !== \"PGRST116\") {\n            // This is an error other than \"no rows returned\"\n            console.error(\"Error checking for existing user:\", checkError);\n            return false;\n        }\n        // User doesn't exist, create them\n        console.log(`Creating new user in Supabase: ${userId}`);\n        const { error: insertError } = await supabase.from(\"users\").insert({\n            id: userId,\n            email: email || \"unknown@example.com\",\n            first_name: firstName || null,\n            last_name: lastName || null,\n            subscription_status: \"inactive\",\n            plan_type: \"free\",\n            is_annual: false,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            cancel_at_period_end: false\n        });\n        if (insertError) {\n            console.error(\"Error creating user in Supabase:\", insertError);\n            return false;\n        }\n        console.log(`Successfully created user ${userId} in Supabase`);\n        return true;\n    } catch (error) {\n        console.error(\"Unexpected error creating user:\", error);\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/services/users.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@clerk","vendor-chunks/next","vendor-chunks/crypto-js","vendor-chunks/tslib","vendor-chunks/cookie","vendor-chunks/map-obj","vendor-chunks/no-case","vendor-chunks/lower-case","vendor-chunks/snakecase-keys","vendor-chunks/snake-case","vendor-chunks/dot-case","vendor-chunks/@supabase","vendor-chunks/whatwg-url","vendor-chunks/tr46","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fwatchlist%2Froute&page=%2Fapi%2Fwatchlist%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fwatchlist%2Froute.ts&appDir=%2FUsers%2Fblakesingleton%2FDesktop%2FStock%20From%20Scratch%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fblakesingleton%2FDesktop%2FStock%20From%20Scratch&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();